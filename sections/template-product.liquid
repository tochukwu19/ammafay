{% assign selected_variant = product.selected_or_first_available_variant %}
{% assign is_preorder = product.metafields.custom.is_preorder %}
{% assign preorder_price = product.metafields.custom.preorder_price %}
{% assign preorder_date = product.metafields.custom.expected_ship_date %}

<style>
  .product-image {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  .noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .section-title {
    cursor: pointer;
    position: relative;
  }

  .section-title.active div {
    transform: rotate(180deg);
  }

  .details-content {
    font-size: 14px;
    line-height: 1.5;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    margin-bottom: 20px;
    padding-top: 10px;
  }

  .preorder-badge {
    background: #ff6b35;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
  }
</style>

<div class="my-8">
  <div class="product w-full">
    <div class="product--information w-full">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input type="hidden" name="id" value="{{ selected_variant.id }}">
        
        {% if is_preorder %}
          <input type="hidden" name="properties[_preorder]" value="true">
          <input type="hidden" name="properties[Expected Ship Date]" value="{{ preorder_date }}">
        {% endif %}

        <div class="mx-auto flex flex-col md:flex-row justify-start gap-16 items-center">
          
          <div class="w-full block md:hidden">
            <div class="space-y-4">
              {% for media in product.media limit: 1 %}
                <div class="product-image w-full h-[300px]" style="background-image: url({{ media | img_url: 'master' }})"></div>
              {% endfor %}
            </div>
          </div>

          <div class="hidden md:block md:w-[50%]">
            <div class="space-y-4">
              {% for media in product.media limit: 1 %}
                <div class="product-image w-full h-[400px]" style="background-image: url({{ media | img_url: 'master' }})"></div>
              {% endfor %}
            </div>
          </div>

          <div class="w-full px-8 md:px-0 md:w-[40%] mb-8 flex flex-col justify-center">
            
            <div class="flex items-center gap-3 mb-2">
              <h1 class="text-[18px] font-[500] uppercase">{{ product.title }}</h1>
              {% if is_preorder %}
                <span class="preorder-badge">Pre-order</span>
              {% endif %}
            </div>

            <div class="mb-4">
                <h2 class="text-base font-[500] text-[#6B7280] uppercase">{{ product.price | money_with_currency }}</h2>
            </div>

            <div class='jdgm-widget jdgm-preview-badge mb-2 text-sm' data-id='{{ product.id }}'>
              {{ product.metafields.judgeme.badge }}
            </div>

            <p class="text-sm font-[500] text-[#6B7280] mb-4">{{ product.description | strip_html }}</p>

            {% if is_preorder and preorder_date != blank %}
              <div class="mb-4 p-3 bg-blue-50 border border-blue-200 rounded">
                <p class="text-sm text-blue-800">
                  <strong>Expected to ship:</strong> {{ preorder_date | date: '%B %d, %Y' }}
                </p>
              </div>
            {% endif %}

            {% unless product.has_only_default_variant %}
              <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                {% for option in product.options_with_values %}
                  <div class="mb-4">
                    <label class="text-sm font-[500] uppercase block mb-2" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                      {{ option.name }}
                    </label>
                    
                    <select 
                      class="w-full p-3 border border-gray-300 rounded text-sm"
                      name="options[{{ option.name | escape }}]"
                      id="Option-{{ section.id }}-{{ forloop.index0 }}">
                      {% for value in option.values %}
                        <option 
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}selected{% endif %}>
                          {{ value }}
                        </option>
                      {% endfor %}
                    </select>
                  </div>
                {% endfor %}
                
                <script type="application/json">
                  {{ product.variants | json }}
                </script>
              </variant-selector>
            {% endunless %}

            <div class="mt-3 mb-6 flex items-center gap-2">
              <div class="quantity-selector w-[120px] flex items-center gap-2 border border-black px-4 py-3">
                <button type="button" class="quantity-button decrease">-</button>
                <input 
                  type="number" 
                  name="quantity" 
                  value="1" 
                  min="1" 
                  class="quantity-input text-center text-base outline-none w-[50px] [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none">
                <button type="button" class="quantity-button increase">+</button>
              </div>

              <button
                type="submit"
                name="add"
                class="flex items-center justify-center gap-2 w-full px-6 py-3 bg-black text-white hover:bg-gray-700 rounded-sm uppercase transition-colors"
                {% if selected_variant.available == false and is_preorder != true %}disabled{% endif %}>
                
                {% if is_preorder %}
                  Pre-order Now
                {% elsif selected_variant.available == false %}
                  Sold Out
                {% else %}
                  Add to Cart
                {% endif %}
              </button>
            </div>

            {% if section.settings.details_content != blank %}
              <div class="details-section border-t pt-4">
                <div class="section-title flex justify-between items-center noselect py-2">
                  <h3 class="text-sm font-[500] uppercase">{{ section.settings.details_title | default: 'Details' }}</h3>
                  <div class="transform transition-transform">{% render 'icon-down' %}</div>
                </div>
                <div class="details-content">
                  {{ section.settings.details_content }}
                </div>
              </div>
            {% endif %}

            {% if section.settings.shipping_content != blank %}
              <div class="shipping-section border-t pt-4">
                <div class="section-title flex justify-between items-center noselect py-2">
                  <h3 class="text-sm font-[500] uppercase">{{ section.settings.shipping_title | default: 'Shipping' }}</h3>
                  <div class="transform transition-transform">â–¼</div>
                </div>
                <div class="details-content">
                  {{ section.settings.shipping_content }}
                </div>
              </div>
            {% endif %}

          </div>
        </div>
      {% endform %}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('product-form');
    const submitButton = form.querySelector('button[type="submit"]');
    
    form.addEventListener('submit', function (e) {
      e.preventDefault();
      
      submitButton.disabled = true;
      const originalText = submitButton.textContent;
      submitButton.textContent = 'Adding...';

      const formData = new FormData(form);
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData,
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Accept': 'application/json',
        },
      })
      .then(response => {
        if (!response.ok) {
          return response.text().then(text => {
            throw new Error(text);
          });
        }
        return response.json();
      })
      .then(() => {
        window.dispatchEvent(new CustomEvent('added-to-cart'));
        submitButton.textContent = 'Added!';
        setTimeout(() => {
          submitButton.textContent = originalText;
          submitButton.disabled = false;
        }, 2000);
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error adding to cart. Please try again.');
        submitButton.textContent = originalText;
        submitButton.disabled = false;
      });
    });

    const quantityInput = document.querySelector('.quantity-input');
    const decreaseBtn = document.querySelector('.quantity-button.decrease');
    const increaseBtn = document.querySelector('.quantity-button.increase');

    decreaseBtn.addEventListener('click', () => {
      if (quantityInput.value > 1) {
        quantityInput.value = parseInt(quantityInput.value) - 1;
      }
    });

    increaseBtn.addEventListener('click', () => {
      quantityInput.value = parseInt(quantityInput.value) + 1;
    });

    document.querySelectorAll('.section-title').forEach(title => {
      title.addEventListener('click', function() {
        this.classList.toggle('active');
        const content = this.nextElementSibling;
        const icon = this.querySelector('div');
        
        if (content.style.maxHeight) {
          content.style.maxHeight = null;
          icon.style.transform = 'rotate(0deg)';
        } else {
          content.style.maxHeight = content.scrollHeight + 'px';
          icon.style.transform = 'rotate(180deg)';
        }
      });
    });

    document.querySelectorAll('variant-selector select').forEach(select => {
      select.addEventListener('change', function() {
        const variantSelector = this.closest('variant-selector');
        if (variantSelector) {
          updateVariant(variantSelector);
        }
      });
    });
  });

  function updateVariant(variantSelector) {
    const options = Array.from(variantSelector.querySelectorAll('select'), select => select.value);
    const variantData = JSON.parse(variantSelector.querySelector('[type="application/json"]').textContent);
    
    const currentVariant = variantData.find(variant => {
      return variant.options.every((option, index) => option === options[index]);
    });

    if (currentVariant) {
      document.querySelector("#product-form input[name='id']").value = currentVariant.id;
      
      const url = new URL(window.location);
      url.searchParams.set('variant', currentVariant.id);
      window.history.replaceState({}, '', url.toString());
      
      const submitButton = document.querySelector('button[type="submit"]');
      if (!currentVariant.available && !{{ is_preorder | default: false }}) {
        submitButton.disabled = true;
        submitButton.textContent = 'Sold Out';
      } else {
        submitButton.disabled = false;
        submitButton.textContent = {{ is_preorder | default: false }} ? 'Pre-order Now' : 'Add to Cart';
      }
    }
  }

  class VariantSelector extends HTMLElement {
    constructor() {
      super();
    }
  }
  customElements.define("variant-selector", VariantSelector);
</script>

{% schema %}
{
  "name": "Product Page",
  "settings": [
    {
      "type": "text",
      "id": "details_title",
      "label": "Details Section Title",
      "default": "Details"
    },
    {
      "type": "richtext",
      "id": "details_content",
      "label": "Details Section Content"
    },
    {
      "type": "text",
      "id": "shipping_title",
      "label": "Shipping Section Title",
      "default": "Shipping & Returns"
    },
    {
      "type": "richtext",
      "id": "shipping_content",
      "label": "Shipping Section Content"
    }
  ]
}
{% endschema %}